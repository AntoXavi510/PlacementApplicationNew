// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlacementApplicationNew.Model;

#nullable disable

namespace PlacementApplicationNew.Migrations
{
    [DbContext(typeof(PlacementAppContext))]
    partial class PlacementAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlacementApplicationNew.Model.Admin", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Apply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("StudentId");

                    b.ToTable("Applys");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int>("CutoffPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfDrive")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SalaryPackage")
                        .HasColumnType("bigint");

                    b.HasKey("RoleId");

                    b.HasIndex("CompanyID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Student", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Class10thMarks")
                        .HasColumnType("int");

                    b.Property<int>("Class12thMarks")
                        .HasColumnType("int");

                    b.Property<float>("CurrentCgpa")
                        .HasColumnType("real");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GraduationYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Apply", b =>
                {
                    b.HasOne("PlacementApplicationNew.Model.Role", "Role")
                        .WithMany("Applys")
                        .HasForeignKey("RoleId");

                    b.HasOne("PlacementApplicationNew.Model.Student", "Student")
                        .WithMany("Applys")
                        .HasForeignKey("StudentId");

                    b.Navigation("Role");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Role", b =>
                {
                    b.HasOne("PlacementApplicationNew.Model.Company", "Company")
                        .WithMany("Roles")
                        .HasForeignKey("CompanyID");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Company", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Role", b =>
                {
                    b.Navigation("Applys");
                });

            modelBuilder.Entity("PlacementApplicationNew.Model.Student", b =>
                {
                    b.Navigation("Applys");
                });
#pragma warning restore 612, 618
        }
    }
}
